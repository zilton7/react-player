{"version":3,"sources":["components/Player.js","components/Song.js","util.js","components/LibrarySong.js","components/Library.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","useRef","getTime","time","Math","floor","slice","useState","currentTime","duration","songInfo","setSongInfo","timeUpdateHandler","e","current","target","className","min","max","value","onChange","type","size","icon","faAngleLeft","onClick","pause","play","faPause","faPlay","faAngleRight","onLoadedMetadata","onTimeUpdate","ref","src","audio","Song","alt","name","cover","artist","chillHop","color","id","uuidv4","active","LibrarySong","song","Library","songs","map","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a950d0ba.chunk.js","sourcesContent":["import React,  { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({ currentSong, isPlaying, setIsPlaying }) => {\n    // Ref\n    const audioRef = useRef(null);\n    // Event Handlers\n    const playSongHandler = () => {\n       if(isPlaying){\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n       } else {\n        audioRef.current.play(); \n        setIsPlaying(!isPlaying);\n       };\n    }\n    const getTime = (time) => {\n        return(\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n    // State\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0\n    })\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        setSongInfo({...songInfo, currentTime: current, duration})\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo, currentTime: e.target.value});\n    }\n\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <input min={0} max={songInfo.duration} value={songInfo.currentTime} onChange={dragHandler} type=\"range\"/>\n                <p>{getTime(songInfo.duration)}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\n                <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\n            </div>\n            <audio onLoadedMetadata={timeUpdateHandler} onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n        </div>\n\n    )\n};\n\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n    return (\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n\n    )\n};\n\n\nexport default Song;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover: \"https://i.scdn.co/image/ab67616d0000b27392ea33b2d11348d692352a33\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Misha, Jussi Halme\",\n      cover: \"https://i.scdn.co/image/ab67616d0000b2734dbbff68622228d0949f9803\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9248\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Hears of Mumbai\",\n      cover: \"https://i.ibb.co/86yd9nX/hears-of-mumbai-cover-min.png\",\n      artist: \"The KPS\",\n      audio: \"http://emusic.lt/download.php?id=7802\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React from \"react\";\n\nconst LibrarySong = ({ song }) => {\n  return (\n    <div className=\"library-song\">\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from 'react';\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ songs }) => {\n    return (\n        <div className=\"library\">\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map(song => <LibrarySong song={song} key={song.id}/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Library;","import { useState } from 'react'\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport \"./styles/app.scss\";\nimport data from './util'\nimport Library from './components/Library'\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[2]);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Song isPlaying={isPlaying} currentSong={ currentSong }/>\n      <Player isPlaying={isPlaying} setIsPlaying={setIsPlaying} currentSong={ currentSong }/>\n      <Library songs={songs}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}